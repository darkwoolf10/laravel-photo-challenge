version: '3'
services:

  #Nginx Service
  pc_webserver:
    image: nginx:alpine
    container_name: pc_webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
      - "543:443"
    volumes:
      - ./backend/:/var/www
      - ./backend/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - pc-network

  #PHP Service
  cp_app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: pc_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./backend/:/var/www
      - ./backend/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - pc-network

  #MySQL Service
  pc_db:
    image: mysql:5.7.22
    container_name: pc_db
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: root
      MYSQL_ROOT_PASSWORD: your_mysql_root_password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./backend/dbdata:/var/lib/mysql/
      - ./backend/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - pc-network

  #Frontend on React.js
  frontend:
    container_name: front
    build:
      context: ./front
      dockerfile: Dockerfile
    volumes:
      - ./front:/front
      - /front/node_modules
    ports:
      - 3001:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
    stdin_open: true

#Docker Networks
networks:
  pc-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
